// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN
  REGULAR
}

enum Gender {
  MALE
  FEMALE
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  password  String
  userType  String     @default("REGULAR")
  email     String
  cellno    String
  gender    String
  address   String
  schedules Schedule[] // One-to-many relationship with Schedule
  auditLogs AuditLog[] // One-to-many relationship with AuditLog
}

model Schedule {
  id          Int      @id @default(autoincrement())
  status      String   @default("Pending") // Default value for schedule status
  quantity    Int      @default(1) // Default value for quantity
  userId      Int // Foreign key to User
  year        Int
  month       String // Month as a string (e.g., "January")
  day         Int
  time        String
  createdAt   DateTime @default(now()) // Automatically set to current date/time on creation
  updatedAt   DateTime @updatedAt // Automatically updated to current date/time on modification
  user        User     @relation(fields: [userId], references: [id]) // Relation to User
  therapyType String
}

model AuditLog {
  id          Int      @id @default(autoincrement())
  action      String // Describes the action taken (e.g., "Accepted", "Deleted")
  status      String   @default("Pending") // Default value for log status
  quantity    Int      @default(1) // Default value for quantity
  userId      Int // Foreign key to User
  year        Int
  month       String // Month as a string (e.g., "January")
  day         Int
  time        String
  createdAt   DateTime @default(now()) // Automatically set to current date/time on creation
  updatedAt   DateTime @updatedAt // Automatically updated to current date/time on modification
  user        User     @relation(fields: [userId], references: [id]) // Relation to User
  therapyType String
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.MediumText
  expiresAt DateTime
}
